name: Build Docker images

on: 
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  build_and_deploy_dotnet:
    name: Build and Deploy .NET Web API
    runs-on: ubuntu-latest
    env:
      YC_DOCKER_REGISTRY_URI: cr.yandex/crphhtvgjecg3ue303sg
      IMAGE_NAME: m1stym1st/dotnet-webapi
      YC_SERVERLESS_CONTAINER_NAME: api-events
      YC_SERVICE_ACCOUNT_ID: ajecnv18e2v9t936e40c
      YC_AUTHORIZED_KEY_JSON: ${{ secrets.YCKEY }}
      YC_FOLDER_ID: b1gts99os6kais5qm3ab
    defaults:
      run:
        working-directory: ./EventManager.WebApi

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x' # Specify your .NET version

    - name: Build .NET Web API
      run: dotnet build --configuration Release

    - name: Publish .NET Web API
      run: dotnet publish --configuration Release -o out 

    - name: Try to install yc cli and login into yandex cloud
      uses: lxhan/yc-install@v3
      with:
        SA_KEY: YC_AUTHORIZED_KEY_JSON
      
    - name: Configure Yandex Cloud CLI
      run: |
        yc config set format json
        yc config set folder-id $YC_FOLDER_ID
      
    - name: docker-login
      run: yc container registry configure-docker --profile sa-profile

    - name: docker-build-push
      run: |
          docker build --tag $YC_DOCKER_REGISTRY_URI/$IMAGE_NAME --platform linux/amd64 .
          docker push $YC_DOCKER_REGISTRY_URI/$IMAGE_NAME:latest
    
    - name: docker-logout
      run: docker logout $YC_DOCKER_REGISTRY_URI

    - name: create-serverless
      run: yc serverless container revision deploy  --container-name $YC_SERVERLESS_CONTAINER_NAME --image $YC_DOCKER_REGISTRY_URI/$IMAGE_NAME:latest --service-account-id $YC_SERVICE_ACCOUNT_ID
